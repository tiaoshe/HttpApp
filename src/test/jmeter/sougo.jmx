<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
<hashTree>
<TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
<stringProp name="TestPlan.comments"></stringProp>
<boolProp name="TestPlan.functional_mode">false</boolProp>
<boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
<elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
<collectionProp name="Arguments.arguments" />
</elementProp>
<stringProp name="TestPlan.user_define_classpath"></stringProp>
</TestPlan>
<hashTree>
<ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
<elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
<boolProp name="LoopController.continue_forever">false</boolProp>
<stringProp name="LoopController.loops">1</stringProp>
</elementProp>
<stringProp name="ThreadGroup.num_threads">1</stringProp>
<stringProp name="ThreadGroup.ramp_time">1</stringProp>
<longProp name="ThreadGroup.start_time">1281132211000</longProp>
<longProp name="ThreadGroup.end_time">1281132211000</longProp>
<boolProp name="ThreadGroup.scheduler">false</boolProp>
<stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
<stringProp name="ThreadGroup.duration"></stringProp>
<stringProp name="ThreadGroup.delay"></stringProp>
</ThreadGroup>
<hashTree>
<CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
<collectionProp name="CookieManager.cookies" />
<boolProp name="CookieManager.clearEachIteration">false</boolProp>
<stringProp name="CookieManager.policy">rfc2109</stringProp>
</CookieManager>
<hashTree />
<Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
<collectionProp name="Arguments.arguments">
<elementProp name="VIEWSTATE" elementType="Argument">
<stringProp name="Argument.name">VIEWSTATE</stringProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
</elementProp>
<elementProp name="jsessionid" elementType="Argument">
<stringProp name="Argument.name">jsessionid</stringProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
</elementProp>
</collectionProp>
</Arguments>
<hashTree />
<HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
<collectionProp name="HeaderManager.headers">
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">User-Agent</stringProp>
<stringProp xml:space="preserve" name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
</elementProp>
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">Accept</stringProp>
<stringProp xml:space="preserve" name="Header.value">image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/xaml+xml, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
</elementProp>
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">Accept-Language</stringProp>
<stringProp xml:space="preserve" name="Header.value">zh-Hans-CN,zh-Hans;q=0.5</stringProp>
</elementProp>
</collectionProp>
</HeaderManager>
<hashTree />
<LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Step 1" enabled="true">
<boolProp name="LoopController.continue_forever">false</boolProp>
<stringProp name="LoopController.loops">1</stringProp>
</LoopController>
<hashTree>
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://www.sogou.com/">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://www.sogou.com/<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">www.sogou.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname=":///viwwwsogou">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">:///viwwwsogou<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="op">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">8</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">op</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="query">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">鍥涘窛	鎴愰兘</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">query</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain"></stringProp>
<stringProp name="HTTPSampler.port">80</stringProp>
<stringProp name="HTTPSampler.protocol"></stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/viwwwsogou</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname=":///tworeq">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">:///tworeq<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="queryString">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">pm2.5</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">queryString</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="qoInfo">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">classNo=0&amp;location=1&amp;vrQuery=pm2.5&amp;query=pm2.5&amp;classId=21169801&amp;classTag=EXTERNAL.PM25.LVSEHUXI</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">qoInfo</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="ie">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">gbk</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">ie</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="userArea">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">鍥涘窛	鎴愰兘</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">userArea</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain"></stringProp>
<stringProp name="HTTPSampler.port">80</stringProp>
<stringProp name="HTTPSampler.protocol"></stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/tworeq</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname=":///tworeq">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">:///tworeq<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="queryString">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">鍥涘窛鎴愰兘澶╂皵</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">queryString</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="ie">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">gbk</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">ie</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="reqClassids">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">70090205;70090206</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">reqClassids</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="queryFrom">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">pc</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">queryFrom</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="vrForQc">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">false</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">vrForQc</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="dataPlatformSource">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">weather_card</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">dataPlatformSource</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="retType">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">xml</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">retType</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain"></stringProp>
<stringProp name="HTTPSampler.port">80</stringProp>
<stringProp name="HTTPSampler.protocol"></stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/tworeq</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://www.sogou.com/web">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://www.sogou.com/web<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="query">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">软件测试培训</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">query</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_asf">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">www.sogou.com</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_asf</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_ast">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1533189792</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_ast</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="w">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">01019900</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">w</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="p">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">40040100</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">p</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="ie">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">gbk</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">ie</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="from">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">index-nologin</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">from</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="s_from">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">index</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">s_from</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sut">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">3887</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sut</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sst0">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1533189792359</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sst0</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="lkt">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">0,0,0</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">lkt</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sugsuv">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1533189639340529</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sugsuv</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sugtime">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1533189792359</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sugtime</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">www.sogou.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/web</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
</hashTree>
</hashTree>
</hashTree>
</hashTree>
</jmeterTestPlan>
